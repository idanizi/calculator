{"version":3,"sources":["components/Screen.js","components/Buttons.js","App.js","redux/store.js","index.js"],"names":["currentNumber","useStoreState","state","Box","style","border","padding","margin","borderRadius","background","Grid","item","container","spacing","NumericButtons","OperationButtons","addOperation","useStoreActions","actions","clear","map","x","Button","variant","color","onClick","addDigit","calculate","numericButtons","Array","fill","_","i","displayName","zero","shift","justify","chunk","threeComponentArray","c","fontWeight","CalcButton","App","display","justifyContent","alignItems","height","Screen","Buttons","role","storeModel","result","items","operations","shouldClearCurrentNumber","action","payload","digits","String","Number","push","length","operation","pop","y","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1fa9d2a.chunk.js","sourcesContent":["import React from 'react'\nimport Box from '@material-ui/core/Box'\nimport { useStoreState } from \"easy-peasy\";\nexport default function () {\n\n  const currentNumber = useStoreState(state => state.currentNumber)\n\n  return (\n    <Box style={{\n      border: \"1px black solid\",\n      padding: \"0.5em\",\n      margin: \"2vh 0\",\n      borderRadius: \"5% / 20%\",\n      background: \"#333\"\n    }}>\n      <Box style={{\n        border: \"1px black solid\",\n        padding: \"0.2em\",\n        background: \"#eee\"\n      }}>\n        {currentNumber}\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport _ from 'lodash'\nimport { useStoreActions } from 'easy-peasy'\n\nexport default function () {\n    return (\n        <Grid item container spacing={1}>\n            <Grid item>\n                <NumericButtons />\n            </Grid>\n            <Grid item>\n                <OperationButtons />\n            </Grid>\n        </Grid>\n    )\n}\n\nfunction OperationButtons() {\n    const operations = [\"+\", \"-\", \"*\", \"/\"];\n    const addOperation = useStoreActions(actions => actions.addOperation);\n    const clear = useStoreActions(actions => actions.clear);\n\n    return (\n        <Grid spacing={1}>\n            {operations.map(x =>\n                <Grid item container spacing={1}>\n                    <Grid item>\n                        <Button variant=\"contained\" \n                        color=\"primary\"\n                        onClick={() => addOperation(x)}\n                        >{x}</Button>\n                    </Grid>\n                </Grid>\n            )}\n            <Grid item container spacing={1}>\n                    <Grid item>\n                        <Button variant=\"contained\" \n                        color=\"secondary\"\n                        onClick={() => clear()}\n                        >{\"C\"}</Button>\n                    </Grid>\n                </Grid>\n        </Grid>\n    );\n}\n\nfunction NumericButtons() {\n\n    const addDigit = useStoreActions(actions => actions.addDigit);\n    const calculate = useStoreActions(actions => actions.calculate)\n\n    const numericButtons = Array(10).fill(0).map((_, i) => ({\n        displayName: i,\n        onClick: () => addDigit(i),\n    }))\n\n    const zero = numericButtons.shift()\n\n    return (\n        <Grid spacing={1} justify=\"center\">\n            {_.chunk(numericButtons.map(x => <CalcButton {...x} />), 3)\n                .map(threeComponentArray =>\n                    <Grid item container spacing={1}>\n                        {threeComponentArray.map(c => <Grid item>{c}</Grid>)}\n                    </Grid>)}\n            <Grid container item spacing={1} justify=\"flex-end\">\n                <Grid item>\n                    <CalcButton onClick={() => calculate() }\n                    color={\"secondary\"} displayName={\"=\"} style={{ fontWeight: \"bold\" }} />\n                </Grid>\n                <Grid item>\n                    <CalcButton {...zero} />\n                </Grid>\n                <Grid item>\n                    <CalcButton displayName={\".\"} style={{ fontWeight: \"bold\" }} />\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nconst CalcButton = ({ displayName, style, onClick, color }) => {\n    return (\n        <Button variant=\"contained\"\n            style={style}\n            onClick={onClick}\n            color={color}\n        >\n            {displayName}\n        </Button>\n    );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box'\nimport Screen from './components/Screen'\nimport Buttons from './components/Buttons'\n\nfunction App() {\n  return (\n    <main>\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n        <Box style={{\n          background: \"#aaa\",\n          padding: '0.7em',\n          borderRadius: \"5%\"\n        }}>\n          <Screen />\n          <Buttons />\n        </Box>\n      </Box>\n      <footer>Â© 2020 Idan Izicovich <span role=\"img\">ðŸ˜Ž</span></footer>\n    </main>\n  );\n}\n\nexport default App;\n","import { createStore, action } from \"easy-peasy\";\n\nconst storeModel = {\n    result: 0,\n    items: [],\n    operations: [],\n    currentNumber: 0,\n    shouldClearCurrentNumber: false,\n\n    clear: action((state, payload) => {\n        state.items = [];\n        state.operations = [];\n        state.currentNumber = 0;\n        state.result = 0;\n    }),\n\n    addDigit: action((state, payload) => {\n        if(state.shouldClearCurrentNumber){\n            state.currentNumber = 0;\n            state.shouldClearCurrentNumber = false;\n        }\n        let digits = String(state.currentNumber);\n        digits += String(payload);\n        state.currentNumber = Number(digits);\n    }),\n\n    addOperation: action((state, payload) => {\n        state.items.push(state.currentNumber);\n        state.shouldClearCurrentNumber = true;\n        state.operations.push(payload);\n    }),\n\n    calculate: action((state, payload) => {\n        state.items.push(state.currentNumber);\n        const { items, operations } = state;\n        while (items.length >= 2 || operations.length >= 1) {\n            let operation;\n            switch (operations.pop()) {\n                case \"+\":\n                    operation = (x, y) => x + y;\n                    break;\n                case \"-\":\n                    operation = (x, y) => y - x;\n                    break;\n                case \"*\":\n                    operation = (x, y) => x * y;\n                    break;\n                case \"/\":\n                    operation = (x, y) => y / x;\n                    break;\n                default:\n                    state.result = \"unknown operation\";\n                    state.items = [];\n                    state.operations = [];\n                    break;\n            }\n\n            if (operation)\n                items.push(operation(items.pop(), items.pop()));\n        }\n\n        state.result = items.pop();\n        state.currentNumber = state.result;\n    })\n}\n\nconst store = createStore(storeModel);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { StoreProvider } from \"easy-peasy\";\nimport store from './redux/store'\n\nReactDOM.render(\n    <StoreProvider store={store}>\n        <App />\n    </StoreProvider>,\n    document.getElementById('root'));"],"sourceRoot":""}